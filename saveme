Hopefully this isn't misplaced.  This may be the largest vibe coding project achieved to date.  It's certainly MUCH more substantial than most.  It uses the Unlicense and is totally free since the vast majority of the code was AI generated at my direction.

PSCAL is an extensible virtual machine and compiler suite implemented in C. The project ships with multiple frontends that all target the shared, stack-based virtual machine:

* **Pascal compiler**: A frontend for a Pascal-like language with a hand-written lexer and parser.
* **Clike compiler**: A compact, C-style language frontend that includes its own preprocessor and a REPL for interactive sessions.
* **Tiny compiler**: An educational frontend written in Python.

All frontends generate a compact bytecode stream that is executed by the VM. This virtual machine provides a rich set of built-in routines and offers optional integrations with SDL2 for graphics and audio, and libcurl for networking. The system is designed to be easily extensible, allowing for the addition of new built-in functions.

I mentioned the initial release of just nine days ago in the #ðŸ’¬ãƒ»general-discussions forum.  In those nine days I've made numerous changes and additions, including implementing a substantial second front end byte compiler for a C Like language.

The project should compile and run on Linux or MacOS.  

https://github.com/emkey1/pscal/releases/tag/v2.0

It would be cool to have a tag for vibe coding, if deemed applicable.


