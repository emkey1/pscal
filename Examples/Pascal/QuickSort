#!/usr/bin/env pascal
program QuickSortDemo;

uses crt;          { optional â€“ for input / output }

var
  a : array[1..100] of integer;

{ ------------------------------------------------------------------ }
procedure quicksort(var arr: array of integer; lo, hi: integer);
  procedure partition(var l, r: integer; var pivotIndex: integer);
  var
    i, j, tmp, p: integer;
  begin
    p := arr[(l + r) div 2];
    i := l; j := r;
    repeat
      while arr[i] < p do Inc(i);
      while arr[j] > p do Dec(j);
      if i <= j then begin
        tmp := arr[i]; arr[i] := arr[j]; arr[j] := tmp;
        Inc(i); Dec(j);
      end;
    until i > j;
    pivotIndex := i;
  end;

var
  pivot: integer;
begin
  if lo < hi then begin
    partition(lo, hi, pivot);
    quicksort(arr, lo, pivot - 1);
    quicksort(arr, pivot, hi);
  end;
end;

var
  i: integer;
begin
  Randomize;
  for i := 1 to Length(a) do
    a[i] := Random(100) + 1;

  quicksort(a, 1, Length(a));
  writeln('Sorted array:');
  for i := 1 to Length(a) do write(a[i]:4, ' ');
  writeln;
end.
