#!/usr/bin/env clike

int main() {
  int s = socketcreate(0);
  if (s < 0) {
    printf("socketcreate failed: %d\n", socketlasterror());
    return 1;
  }

  if (socketconnect(s, "echo.websocket.events", 80) != 0) {
    printf("socketconnect failed: %d\n", socketlasterror());
    socketclose(s);
    return 1;
  }

  if (socketsend(s,
        "GET / HTTP/1.1\r\n"
        "Host: echo.websocket.events\r\n"
        "Upgrade: websocket\r\n"
        "Connection: Upgrade\r\n"
        "Sec-WebSocket-Version: 13\r\n"
        "Sec-WebSocket-Key: dGhlIHNhbXBsZSBub25jZQ==\r\n"
        "\r\n") < 0) {
    printf("failed to send handshake: %d\n", socketlasterror());
    socketclose(s);
    return 1;
  }

  mstream resp = socketreceive(s, 1024);
  if (resp == NULL) {
    printf("handshake receive failed: %d\n", socketlasterror());
    socketclose(s);
    return 1;
  }

  str handshake = mstreambuffer(resp);
  printf("handshake:\n%s\n", handshake);
  mstreamfree(&resp);

  // send masked text frame "hi"
  if (socketsend(s, "\x81\x82\x12\x34\x56\x78\x7a\x5d") < 0) {
    printf("failed to send WebSocket frame: %d\n", socketlasterror());
    socketclose(s);
    return 1;
  }

  mstream msg = socketreceive(s, 1024);
  if (msg == NULL) {
    printf("echo receive failed: %d\n", socketlasterror());
    socketclose(s);
    return 1;
  }

  str buf = mstreambuffer(msg);
  int msglen = strlen(buf);
  if (msglen >= 4) {
    printf("echo: %c%c\n", buf[3], buf[4]);
  } else {
    printf("unexpected echo payload (length=%d)\n", msglen);
  }
  mstreamfree(&msg);
  socketclose(s);
  return 0;
}
