#!/usr/bin/env pascal
program SierpinskiTriangleThreads;

uses CRT;

const
  MaxLevel = 13;  // Adjust for more/less detail
  CharToDraw = '+';

var
  ThreadID0, ThreadID1, ThreadID2: integer;
  ThreadLevel: integer;

procedure DrawPoint(x, y: integer);
begin
  GotoXY(x, y);
  Write(CharToDraw);
end;

procedure DrawSierpinski(x1, y1, x2, y2, x3, y3: integer; level: integer);
var
  mx1, my1, mx2, my2, mx3, my3: integer;
begin
  if level = 0 then
  begin
    DrawPoint(x1, y1);
    DrawPoint(x2, y2);
    DrawPoint(x3, y3);
  end
  else
  begin
    mx1 := (x1 + x2) div 2; my1 := (y1 + y2) div 2;
    mx2 := (x2 + x3) div 2; my2 := (y2 + y3) div 2;
    mx3 := (x3 + x1) div 2; my3 := (y3 + y1) div 2;
    DrawSierpinski(x1, y1, mx1, my1, mx3, my3, level - 1);
    DrawSierpinski(mx1, my1, x2, y2, mx2, my2, level - 1);
    DrawSierpinski(mx3, my3, mx2, my2, x3, y3, level - 1);
  end;
end;

procedure Thread0;
begin
  DrawSierpinski(x1, y1, mx1, my1, mx3, my3, ThreadLevel);
end;

procedure Thread1;
begin
  DrawSierpinski(mx1, my1, x2, y2, mx2, my2, ThreadLevel);
end;

procedure Thread2;
begin
  DrawSierpinski(mx3, my3, mx2, my2, x3, y3, ThreadLevel);
end;

var
  maxX, maxY: integer;
  x1, y1, x2, y2, x3, y3: integer;
  mx1, my1, mx2, my2, mx3, my3: integer;
  ch: char;

begin
  ClrScr;
  HideCursor;

  maxY := ScreenRows;
  maxX := ScreenCols;

  writeln('Drawing Sierpinski Triangle with threads (Level ', MaxLevel, ')...');
  Delay(1000);

  x1 := maxX div 2; y1 := 2;
  x2 := 2; y2 := maxY - 1;
  x3 := maxX - 1; y3 := maxY - 1;

  mx1 := (x1 + x2) div 2; my1 := (y1 + y2) div 2;
  mx2 := (x2 + x3) div 2; my2 := (y2 + y3) div 2;
  mx3 := (x3 + x1) div 2; my3 := (y3 + y1) div 2;

  ThreadLevel := MaxLevel - 1;

  ThreadID0 := spawn Thread0;
  ThreadID1 := spawn Thread1;
  ThreadID2 := spawn Thread2;

  join ThreadID0;
  join ThreadID1;
  join ThreadID2;

  GotoXY(1, maxY);
  ShowCursor;
  Write('Done. Press any key to exit.');
  ch := ReadKey;
  ClrScr;
end.
