#!/usr/bin/env python3
import os
from http.server import BaseHTTPRequestHandler, HTTPServer

class Handler(BaseHTTPRequestHandler):
    def do_GET(self):
        if self.path == '/headers':
            self.send_response(200)
            self.send_header('X-Test', 'ok')
            self.end_headers()
            self.wfile.write(b'hi')
        elif self.path == '/redirect':
            self.send_response(302)
            self.send_header('Location', '/headers')
            self.end_headers()
        elif self.path == '/error503':
            self.send_response(503)
            self.send_header('Content-Type', 'text/plain')
            self.end_headers()
            self.wfile.write(b'service unavailable')
        else:
            self.send_response(404)
            self.end_headers()
    def log_message(self, format, *args):
        pass

if __name__ == '__main__':
    ready_file = os.environ.get('PSCAL_NET_READY_FILE')
    server = HTTPServer(('127.0.0.1', 0), Handler)
    port = server.server_address[1]
    if ready_file:
        try:
            with open(ready_file, 'w', encoding='utf-8') as f:
                f.write('ready\n')
                f.write(f'PORT={port}\n')
        except OSError:
            pass
    server.serve_forever()
