program MathLibTest;

uses
  MathLib; { constants only; functions are tested via builtins }

const
  TOL = 0.0001;

procedure AssertEqualInt(expected, actual: integer; testName: string);
begin
  write('START: ', testName, ': ');
  if expected = actual then
    writeln('PASS')
  else
    writeln('FAIL (expected: ', expected, ', got: ', actual, ')');
end;

procedure AssertEqualReal(expected, actual: real; testName: string);
begin
  write('START: ', testName, ': ');
  if abs(expected - actual) < TOL then
    writeln('PASS')
  else
    writeln('FAIL (expected: ', expected:0:4, ', got: ', actual:0:4, ')');
end;

procedure TestMathLib;
begin
  writeln;
  writeln('--- Testing MathLib ---');
  AssertEqualReal(0.7854, arctan(1.0), 'arctan(1)');
  AssertEqualReal(0.5236, arcsin(0.5), 'arcsin(0.5)');
  AssertEqualReal(1.0472, arccos(0.5), 'arccos(0.5)');
  AssertEqualReal(1.0, cotan(0.785398), 'cotan(pi/4)');
  AssertEqualReal(8.0, power(2.0, 3.0), 'power(2,3)');
  AssertEqualReal(3.0, log10(1000.0), 'log10(1000)');
  AssertEqualReal(0.0, sinh(0.0), 'sinh(0)');
  AssertEqualReal(1.0, cosh(0.0), 'cosh(0)');
  AssertEqualReal(0.0, tanh(0.0), 'tanh(0)');
  AssertEqualReal(2.0, max(2.0, 1.0), 'max(2,1)');
  AssertEqualReal(1.0, min(2.0, 1.0), 'min(2,1)');
  AssertEqualInt(3, floor(3.7), 'floor(3.7)');
  AssertEqualInt(4, ceil(3.1), 'ceil(3.1)');
end;

begin
  writeln('Running MathLib tests');
  TestMathLib;
  writeln;
  writeln('MathLib tests completed.');
end.
