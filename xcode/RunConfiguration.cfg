# PSCAL Xcode run configuration
#
# Edit this file to choose which PSCAL binary Xcode executes when you
# run the shared "pascal" scheme.  Lines beginning with "#" are
# ignored.  Relative paths are resolved from this file's directory.

# Name of the executable to launch from the build products directory.
# Common options: pascal, pscalvm, pscald, pscaljson2bc, dascal,
# clike, clike-repl, or rea.
binary = pascal

# Command-line arguments passed to the executable.  The syntax matches
# a typical shell: use quotes to group whitespace and backslashes to
# escape characters.  Specify additional "args" lines to append more
# segments to the command line.
# args = --help
# args = "Examples/pascal/base/ThreadsProcPtrDemo"
# args = "Examples/pascal/base/ThreadsProcPtrDemo" "--some-program-arg"
# When using the `pascal` front end provide the source file directly.
# Switch to `binary = pscalvm` if you need VM-style flags such as `--input`.
args = "Examples/pascal/sdl/MultiBouncingBalls"

# Working directory for the launched process.  Relative paths are
# resolved against this file's location.  The default changes to the
# repository root so binaries can locate bundled data files.
working_dir = ..
