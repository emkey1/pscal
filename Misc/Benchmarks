Oct 10 2025
mke@MacBook-Pro-M1 shellbench % ./shellbench -s exsh,bash sample/assign.sh
------------------------------------------------------------------------
name                                                     exsh       bash
------------------------------------------------------------------------
assign.sh: positional params                           36,386    465,330
assign.sh: variable                                    40,782    707,253
assign.sh: local var                                   41,111    697,178
assign.sh: local var (typeset)                         41,100    698,273
------------------------------------------------------------------------
* count: number of executions per second

Baseline
------------------------------------------------------------------------
name                                                     exsh       bash
------------------------------------------------------------------------
assign.sh: positional params                           36,268    454,278 
assign.sh: variable                                    40,463    699,913 
assign.sh: local var                                   40,439    693,382 
assign.sh: local var (typeset)                         40,534    691,530 
cmp.sh: [ ]                                            22,404    377,805 
cmp.sh: [[ ]]                                          21,072    528,989 
cmp.sh: case                                           30,748    669,336 
eval.sh: direct assign                                 22,110    332,424
eval.sh: eval assign                                    3,632    194,901
null.sh: blank                                         60,546      error 
null.sh: assign variable                               40,804    731,789 
null.sh: define function                               41,028    776,276 
null.sh: undefined variable                            40,612    575,879 
null.sh: : command                                     36,228    649,398 
------------------------------------------------------------------------

o register builtin catalog once via pthread_once and reuse the populated registry
o add an exsh regression that repeatedly exercises command substitution to confirm the registry setup remains cheap

------------------------------------------------------------------------
name                                                     exsh       bash
------------------------------------------------------------------------
assign.sh: positional params                           36,627    464,423
assign.sh: variable                                    41,163    704,908
assign.sh: local var                                   40,973    694,241
assign.sh: local var (typeset)                         40,833    694,903
cmp.sh: [ ]                                            22,698    381,092
cmp.sh: [[ ]]                                          21,349    530,118
cmp.sh: case                                           30,955    673,339
eval.sh: direct assign                                 22,072    332,717
eval.sh: eval assign                                    3,632    194,187
eval.sh: command subs                                   error      1,797
null.sh: blank                                         61,073      error
null.sh: assign variable                               40,798    731,948
null.sh: define function                               41,314    776,072
null.sh: undefined variable                            40,788    570,572
null.sh: : command                                     36,342    649,347
------------------------------------------------------------------------

o Added vmResetExecutionState so VMs can be safely reused across invocations without re-running initVM/freeVM, and exposed it in the public VM interface.
o Reworked shellInvokeFunction to keep a cached VM instance, resetting it between calls instead of constructing and destroying a fresh VM each time.
o Added an exsh regression script and manifest entry that repeatedly calls a shell function to verify positional parameters and exit statuses remain correct under VM reuse.
------------------------------------------------------------------------
name                                                     exsh       bash
------------------------------------------------------------------------
assign.sh: positional params                           35,680    455,222
assign.sh: variable                                    40,103    680,855
assign.sh: local var                                   40,469    689,560
assign.sh: local var (typeset)                         40,404    693,286
cmp.sh: [ ]                                            22,256    377,260
cmp.sh: [[ ]]                                          21,070    528,686
cmp.sh: case                                           30,523    670,665

o Extend `struct VM_s` in `src/vm/vm.h` with a dynamic array (e.g., `Symbol** procedureByAddress` plus a size field) that maps bytecode offsets to `Symbol*`.
o Initialize the new fields to `NULL`/`0` in `initVM`, and release them in both `vmResetExecutionState` and `freeVM`.
o Add a helper in `src/vm/vm.c` near the existing symbol helpers that walks `vm->procedureTable` (including nested symbol tables) and populates the cache for each `Symbol` whose `bytecode_address` is non-negative; grow the array to at least `chunk->count` bytes.
o Invoke that helper at the start of `interpretBytecode` (after `vm->chunk` and `vm->procedureTable` are set) and replace the hot-path calls to `findProcedureByAddress` in `CALL`, `CALL_METHOD`, `CALL_INDIRECT`, and `PROC_CALL_INDIRECT` with cache lookups that fall back to the old search only when the cache slot is empty.
o Update the thread bootstrap in `threadStart` (also in `src/vm/vm.c`) to consult the cache before falling back to `findProcedureByAddress`, so worker threads benefit from the same optimization.

Thu Oct 16 19:45:27 CEST 2025
mke@MacBook-Pro-M1 shellbench % ./shellbench -s exsh,bash sample/assign.sh sample/cmp.sh sample/eval.sh sample/null.sh sample/subshell.sh
------------------------------------------------------------------------
name                                                     exsh       bash
------------------------------------------------------------------------
assign.sh: positional params                           53,676    451,804 
assign.sh: variable                                    65,298    692,804 
assign.sh: local var                                   64,890    681,423 
assign.sh: local var (typeset)                         64,895    683,591 
cmp.sh: [ ]                                            34,541    374,774 
cmp.sh: [[ ]]                                          30,311    522,162 
cmp.sh: case                                           49,952    662,035 
eval.sh: direct assign                                 37,695    325,207 
eval.sh: eval assign                                    5,034    191,033 
eval.sh: command subs                                   error      1,753 
null.sh: blank                                         96,926      error 
null.sh: assign variable                               64,893    718,328 
null.sh: define function                               67,573    763,725 
null.sh: undefined variable                            65,271    571,010 
null.sh: : command                                     52,558    632,211 
subshell.sh: no subshell                               53,997    582,902 
subshell.sh: brace                                     49,108    576,546 
subshell.sh: subshell                                  44,231      2,067 
subshell.sh: command subs                               4,601      1,865 
subshell.sh: external command                           error        570 
------------------------------------------------------------------------

Thu Oct 16 20:00:35 CEST 2025

o Added a makeOwnedString helper so dynamically allocated string buffers can be wrapped directly by Value instances owned by the VM.
o Updated the ADD branch of the BINARY_OP macro to use the owned-string helper, avoiding redundant copies and manual frees during string concatenation.

mke@MacBook-Pro-M1 shellbench % ./shellbench -s exsh,bash sample/assign.sh sample/cmp.sh sample/eval.sh sample/null.sh sample/subshell.sh sample/stringop1.sh
------------------------------------------------------------------------
name                                                     exsh       bash
------------------------------------------------------------------------
assign.sh: positional params                           53,517    454,518
assign.sh: variable                                    65,133    690,777
assign.sh: local var                                   65,259    686,093
assign.sh: local var (typeset)                         64,634    684,078
cmp.sh: [ ]                                            34,222    374,569
cmp.sh: [[ ]]                                          30,531    522,432
cmp.sh: case                                           49,806    660,219
eval.sh: direct assign                                 37,787    324,887
eval.sh: eval assign                                    5,112    190,818
eval.sh: command subs                                   error      1,730
null.sh: blank                                         97,947      error
null.sh: assign variable                               65,391    722,864
null.sh: define function                               67,469    766,741
null.sh: undefined variable                            65,218    572,542
null.sh: : command                                     52,708    640,401
subshell.sh: no subshell                               54,915    585,166
subshell.sh: brace                                     49,162    577,727
subshell.sh: subshell                                  44,563      2,049
subshell.sh: command subs                               4,626      1,803
subshell.sh: external command                           error        566
stringop1.sh: string length                            63,904    596,289
------------------------------------------------------------------------

Fri Oct 17 08:50:01 CEST 2025

mke@MacBook-Pro-M1 shellbench % ./shellbench -s exsh,bash sample/assign.sh sample/cmp.sh sample/eval.sh sample/null.sh sample/subshell.sh sample/stringop1.sh
------------------------------------------------------------------------
name                                                     exsh       bash
------------------------------------------------------------------------
assign.sh: positional params                           55,044    462,107
assign.sh: variable                                    66,654    706,384
assign.sh: local var                                   64,997    675,615
assign.sh: local var (typeset)                         64,606    675,869
cmp.sh: [ ]                                            33,555    369,638
cmp.sh: [[ ]]                                          29,832    518,143
cmp.sh: case                                           49,565    650,733
eval.sh: direct assign                                 37,654    322,700
eval.sh: eval assign                                    5,048    189,051
eval.sh: command subs                                   error      1,825
null.sh: blank                                         96,890      error
null.sh: assign variable                               64,381    712,966
null.sh: define function                               67,482    759,559
null.sh: undefined variable                            64,734    563,055
null.sh: : command                                     52,415    633,453
subshell.sh: no subshell                               54,198    577,398
subshell.sh: brace                                     48,740    573,085
subshell.sh: subshell                                  44,338      2,000
subshell.sh: command subs                               4,596      1,958
subshell.sh: external command                           error        575
stringop1.sh: string length                            63,783    589,314
------------------------------------------------------------------------

Sat Oct 18 08:01:44 CEST 2025

mke@MacBook-Pro-M1 shellbench % time /Users/mke/Dropbox/git/shellbench/shellbench -s 'exsh,bash' sample/assign.sh sample/cmp.sh sample/count.sh sample/eval.sh sample/func.sh sample/null.sh sample/subshell.sh sample/stringop1.sh
------------------------------------------------------------------------
name                                                     exsh       bash
------------------------------------------------------------------------
assign.sh: positional params                           54,243    456,049
assign.sh: variable                                    65,678    698,115
assign.sh: local var                                   65,848    690,750
assign.sh: local var (typeset)                         65,005    680,768
cmp.sh: [ ]                                            34,311    374,213
cmp.sh: [[ ]]                                          30,719    527,560
cmp.sh: case                                           50,206    668,711
count.sh: posix                                        64,119    514,889
count.sh: typeset -i                                   64,300    488,311
count.sh: increment                                    50,192    635,580
eval.sh: direct assign                                 38,092    327,456
eval.sh: eval assign                                    5,032    192,337
eval.sh: command subs                                   error      1,926
func.sh: no func                                       53,068    646,152
func.sh: func                                          39,174    345,142
null.sh: blank                                         98,761      error
null.sh: assign variable                               66,006    727,103
null.sh: define function                               67,859    771,402
null.sh: undefined variable                            65,683    573,597
null.sh: : command                                     52,995    639,542
subshell.sh: no subshell                               55,243    587,158
subshell.sh: brace                                     49,382    580,020
subshell.sh: subshell                                  44,929      2,123
subshell.sh: command subs                               4,457      1,834
subshell.sh: external command                           error        581
stringop1.sh: string length                            64,332    595,905
------------------------------------------------------------------------

Sat Oct 18 11:25:02 CEST 2025

mke@MacBook-Pro-M1 shellbench % time /Users/mke/Dropbox/git/shellbench/shellbench -s 'exsh,bash' sample/assign.sh sample/cmp.sh sample/count.sh sample/eval.sh sample/func.sh sample/null.sh sample/subshell.sh sample/stringop1.sh
------------------------------------------------------------------------
name                                                     exsh       bash
------------------------------------------------------------------------
assign.sh: positional params                           53,508    453,248
assign.sh: variable                                    64,708    694,448
assign.sh: local var                                   65,012    687,525
assign.sh: local var (typeset)                         64,860    688,530
cmp.sh: [ ]                                            34,299    372,173
cmp.sh: [[ ]]                                          30,393    515,170
cmp.sh: case                                           50,155    661,141
count.sh: posix                                        63,215    513,578
count.sh: typeset -i                                   62,874    490,824
count.sh: increment                                    49,788    629,958
eval.sh: direct assign                                 37,630    325,981
eval.sh: eval assign                                    4,880    190,992
eval.sh: command subs                                   error      1,699
func.sh: no func                                       52,355    641,392
func.sh: func                                          39,026    344,143
null.sh: blank                                         98,059      error
null.sh: assign variable                               65,365    721,401
null.sh: define function                               67,551    768,465
null.sh: undefined variable                            65,390    570,889
null.sh: : command                                     52,587    642,398
subshell.sh: no subshell                               54,651    584,553
subshell.sh: brace                                     49,144    576,218
subshell.sh: subshell                                  44,659      1,947
subshell.sh: command subs                               4,359      1,800
subshell.sh: external command                           error        562
stringop1.sh: string length                            63,737    588,745
------------------------------------------------------------------------
* count: number of executions per second
/Users/mke/Dropbox/git/shellbench/shellbench -s 'exsh,bash' sample/assign.sh   231.58s user 15.74s system 123% cpu 3:19.63 total

Sat Oct 18 19:32:16 CEST 2025

Extensive optimizations.  More to come.  See git log for details

------------------------------------------------------------------------
name                                                     exsh       bash
------------------------------------------------------------------------
assign.sh: positional params                           53,206    454,806
assign.sh: variable                                    64,963    693,520
assign.sh: local var                                   64,828    684,776
assign.sh: local var (typeset)                         64,836    683,142
cmp.sh: [ ]                                            34,560    376,086
cmp.sh: [[ ]]                                          30,458    525,369
cmp.sh: case                                           49,936    653,437
count.sh: posix                                        62,974    509,069
count.sh: typeset -i                                   63,382    485,150
count.sh: increment                                    92,117    633,618
eval.sh: direct assign                                 37,252    326,437
eval.sh: eval assign                                    3,270    189,990
eval.sh: command subs                                   error      1,766
func.sh: no func                                       95,241    640,724
func.sh: func                                          38,533    341,664
null.sh: blank                                         95,649      error
null.sh: assign variable                               64,986    722,977
null.sh: define function                               66,811    765,752
null.sh: undefined variable                            65,096    568,330
null.sh: : command                                     95,634    638,384
subshell.sh: no subshell                               95,820    578,635
subshell.sh: brace                                     48,506    579,358
subshell.sh: subshell                                  43,945      2,008
subshell.sh: command subs                               3,022      1,873
subshell.sh: external command                           error        557
stringop1.sh: string length                            63,171    592,104
------------------------------------------------------------------------

Sat Oct 18 21:51:37 CEST 2025
o Populate a dedicated hash table for core and dynamically registered VM builtins during registry initialisation
o Expose hashed lookup helpers so registration, handler resolution, and ID queries avoid linear scans and update VM call sites accordingly
o Extend the CLike ExtBuiltinQuery fixture to ensure dynamically registered builtins execute successfully

mke@MacBook-Pro-M1 shellbench % time /Users/mke/Dropbox/git/shellbench/shellbench -s 'exsh,bash' sample/assign.sh sample/cmp.sh sample/count.sh sample/eval.sh sample/func.sh sample/null.sh sample/subshell.sh sample/stringop1.sh
------------------------------------------------------------------------
name                                                     exsh       bash
------------------------------------------------------------------------
assign.sh: positional params                           56,538    441,955
assign.sh: variable                                    62,744    672,985
assign.sh: local var                                   62,679    668,205
assign.sh: local var (typeset)                         62,761    664,372
cmp.sh: [ ]                                            35,251    363,948
cmp.sh: [[ ]]                                          30,702    509,603
cmp.sh: case                                           48,628    645,718
count.sh: posix                                        61,497    499,313
count.sh: typeset -i                                   61,684    476,053
count.sh: increment                                    87,612    577,543
eval.sh: direct assign                                 36,278    318,063
eval.sh: eval assign                                    5,530    185,007
eval.sh: command subs                                   error      1,704
func.sh: no func                                       92,595    626,456
func.sh: func                                          40,096    333,968
null.sh: blank                                         92,036      error
null.sh: assign variable                               62,874    707,218
null.sh: define function                               65,194    744,380
null.sh: undefined variable                            62,751    553,028
null.sh: : command                                     92,917    627,613
subshell.sh: no subshell                               92,513    566,067
subshell.sh: brace                                     51,564    563,285
subshell.sh: subshell                                  46,608      1,962
subshell.sh: command subs                               4,933      1,790
subshell.sh: external command                           error        540
stringop1.sh: string length                            61,483    577,200
------------------------------------------------------------------------

Sat Oct 18 22:05:45 CEST 2025
o Maintain a hash table keyed by canonical builtin names alongside the existing array to avoid linear scans when registering functions
o Update builtin helpers to query the new hash and keep isBuiltin/getBuiltinType in sync
o Extend the Pascal scope manifest with a case-sensitive builtin regression test

mke@MacBook-Pro-M1 shellbench % time /Users/mke/Dropbox/git/shellbench/shellbench -s 'exsh,bash' sample/assign.sh sample/cmp.sh sample/count.sh sample/eval.sh sample/func.sh sample/null.sh sample/subshell.sh sample/stringop1.sh      
------------------------------------------------------------------------
name                                                     exsh       bash
------------------------------------------------------------------------
assign.sh: positional params                          116,918    453,125 
assign.sh: variable                                   144,545    693,143 
assign.sh: local var                                  144,231    673,168 
assign.sh: local var (typeset)                        142,966    687,199 
cmp.sh: [ ]                                            76,582    374,593 
cmp.sh: [[ ]]                                          58,746    525,199 
cmp.sh: case                                          121,946    663,920 
count.sh: posix                                       137,869    513,640 
count.sh: typeset -i                                  137,775    491,918 
count.sh: increment                                   198,963    632,043 
eval.sh: direct assign                                 80,364    327,839 
eval.sh: eval assign                                    6,521    191,919 
eval.sh: command subs                                   error      1,796 
func.sh: no func                                      212,971    642,455 
func.sh: func                                          78,423    344,568 
null.sh: blank                                        212,116      error 
null.sh: assign variable                              146,431    727,476 
null.sh: define function                              162,479    768,369 
null.sh: undefined variable                           144,226    573,774 
null.sh: : command                                    212,958    644,596 
subshell.sh: no subshell                              213,802    585,015 
subshell.sh: brace                                    113,699    580,889 
subshell.sh: subshell                                 106,276      2,192 
subshell.sh: command subs                               5,746      1,947 
subshell.sh: external command                           error        597 
stringop1.sh: string length                           138,867    594,724 
------------------------------------------------------------------------

